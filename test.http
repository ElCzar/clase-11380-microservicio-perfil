#########################################################################
### Test 0.1: Test Master Realm Token Endpoint
# @name masterAuth
POST http://localhost:8180/realms/master/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

grant_type=password&client_id=admin-cli&username=admin&password=admin
###

#########################################################################
@masterToken = {{masterAuth.response.body.access_token}}

#########################################################################
### Test 0.2: Test Userinfo Endpoint with Master Realm Token
GET http://localhost:8180/admin/realms/microservices-ecosystem/users
Authorization: Bearer {{masterToken}}
###

#########################################################################
### Test 1: Register a Basic User
POST http://localhost:8081/auth/register/user
Content-Type: application/json

{
  "username": "testuser",
  "email": "testuser@example.com",
  "firstName": "Test",
  "lastName": "User",
  "password": "password123",
  "age": 25,
  "photo": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==",
  "description": "Test user for authentication testing"
}

###

#########################################################################
### Test 2: Login with Basic User  
# @name loginUser
POST http://localhost:8081/auth/login
Content-Type: application/json

{
  "username": "testuser",
  "password": "password123"
}

###

#########################################################################
### Test 2.1: Extract Token from Login Response
@userToken = {{loginUser.response.body.accessToken}}

###

#########################################################################
### Test 3: Get User Details from UserInfo Endpoint (Recommended)
GET http://localhost:8081/auth/userinfo
Authorization: Bearer {{userToken}}

###

#########################################################################
### Test 4: Get User Details from JWT Token Claims (Fast)
GET http://localhost:8081/auth/token-details
Authorization: Bearer {{userToken}}

###

#########################################################################
### Test 5: Introspect Token (Detailed Info)
GET http://localhost:8081/auth/introspect
Authorization: Bearer {{userToken}}

###

#########################################################################
### Test 6: Direct Keycloak UserInfo Endpoint
GET http://localhost:8180/realms/microservices-ecosystem/protocol/openid-connect/userinfo
Authorization: Bearer {{userToken}}

###

#########################################################################
### Test 7: Direct Keycloak Token Introspection
POST http://localhost:8180/realms/microservices-ecosystem/protocol/openid-connect/token/introspect
Content-Type: application/x-www-form-urlencoded
Authorization: Basic cGVyZmlsLXNlcnZpY2U6WGh6RTQ5MEZWSndvSjNPZExseXlxcER5SWFmMWxnVmU=

token={{userToken}}

###

#########################################################################
### Test 8: Get Keycloak Public Keys (For JWT Verification)
GET http://localhost:8180/realms/microservices-ecosystem/protocol/openid-connect/certs

###

#########################################################################
### Test 2.2: Login Provider and Save Token
# @name loginProvider  
POST http://localhost:8081/auth/login
Content-Type: application/json

{
  "username": "testprovider",
  "password": "password123"
}

###

#########################################################################
### Test 2.3: Extract Provider Token
@providerToken = {{loginProvider.response.body.accessToken}}


###

#########################################################################
### Test 3: Register a Provider
POST http://localhost:8081/auth/register/provider
Content-Type: application/json

{
  "username": "testprovider",
  "email": "provider@example.com",
  "firstName": "Test",
  "lastName": "Provider",
  "password": "password123",
  "age": 30,
  "photo": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==",
  "description": "Test provider for authentication testing",
  "phone": "+1234567890",
  "webPage": "https://testprovider.com",
  "socialMediaContact": "@testprovider"
}

###

#########################################################################
### Test 4: Access User Profile (Protected Endpoint)
GET http://localhost:8081/auth/profile
Authorization: Bearer {{userToken}}

###

#########################################################################
### Test 5: Access Provider Data (Protected Endpoint)  
GET http://localhost:8081/auth/provider
Authorization: Bearer {{providerToken}}

###

### Test 6: Invalid Login Test
POST http://localhost:8081/auth/login
Content-Type: application/json

{
  "username": "nonexistent",
  "password": "wrongpassword"
}

###

### Test 7: Health Check (Optional - if you have actuator)
GET http://localhost:8081/actuator/health

###